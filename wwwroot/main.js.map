{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/lists.resolver.ts","webpack:///./src/app/_resolvers/member-detail.resolver.ts","webpack:///./src/app/_resolvers/member-edit.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver.ts","webpack:///./src/app/_resolvers/messages.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app-ngx-bootstrap.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/members/member-messages/member-messages.component.css","webpack:///./src/app/members/member-messages/member-messages.component.html","webpack:///./src/app/members/member-messages/member-messages.component.ts","webpack:///./src/app/members/photo-editor/photo-editor.component.css","webpack:///./src/app/members/photo-editor/photo-editor.component.html","webpack:///./src/app/members/photo-editor/photo-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    public authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router\n  ) {}\n\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n    this.alertify.error('You shall not pass !');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, CanDeactivate } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<MemberEditComponent> {\n  constructor(\n    public authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router\n  ) {}\n\n  canDeactivate(component: MemberEditComponent): boolean {\n    if (component.editForm.dirty) {\n      return confirm ('Are you sure you want to continue? All unsaved changes will be lost !');\n    }\n    return true;\n  }\n}\n","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n  pageNumber =1;\r\n  pageSize= 5;\r\n  likesParam = 'Likers';\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  // when we user resolve it automatically subscribes to the method so dont have to subscribe ourselves\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null); // null observable\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  // when we user resolve it automatically subscribes to the method so dont have to subscribe ourselves\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(route.params['id']).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/members']);\r\n        return of(null); // null observable\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  // when we user resolve it automatically subscribes to the method so dont have to subscribe ourselves\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving your data');\r\n        this.router.navigate(['/members']);\r\n        return of(null); // null observable\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n  pageNumber =1;\r\n  pageSize= 5;\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  // when we user resolve it automatically subscribes to the method so dont have to subscribe ourselves\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null); // null observable\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Message } from '../_models/message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n  pageNumber =1;\r\n  pageSize= 5;\r\n  messageContainer = 'Unread';;\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private auth : AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  // when we user resolve it automatically subscribes to the method so dont have to subscribe ourselves\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n    return this.userService.getMessages(this.auth.decodedToken.nameid, this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving messages');\r\n        this.router.navigate(['/home']);\r\n        return of(null); // null observable\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any; // to avoid tslist errors\n\n@Injectable({\n  providedIn: 'root'\n})\n// just a demonstration of how you can do this.\n// You can pick whatever alertify methods you want and add wrappers around them and then when we want to\n// call them we inject our alertify service into our components and then we use the methods inside that service\n// to call these different methods here which are really just wrappers around alertify existing javascript\nexport class AlertifyService {\n  constructor() {}\n\n  // okCllback is going to be a function that we provide when we use this confirm method.\n  confirm(message: string, okCllback: () => any) {\n    alertify.confirm(message, function(clickEvent) {\n      if (clickEvent) {\n        okCllback();\n      } else {\n      }\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string){\n    alertify.error(message);\n  }\n\n  warning(message: string){\n    alertify.warning(message);\n  }\n\n  message(message: string){\n    alertify.message(message);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { BehaviorSubject } from 'rxjs';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl + 'auth/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  changeMemberPhoto(photoUrl: string) {\n    this.photoUrl.next(photoUrl);\n  }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          localStorage.setItem('user', JSON.stringify(user.user));\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          this.currentUser = user.user;\n          this.changeMemberPhoto(this.currentUser.photoUrl);\n        }\n      })\n    );\n  }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl + 'register', user);\n  }\n\n  // token not expired : true\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError(error => {\r\n        if (error instanceof HttpErrorResponse) {\r\n          if (error.status === 401) {\r\n            return throwError(error.statusText);\r\n          }\r\n          const applicationError = error.headers.get('Application-Error');\r\n          if (applicationError) {\r\n            console.error(applicationError);\r\n            return throwError(applicationError);\r\n          }\r\n          const serverError = error.error;\r\n          let modelStateErrors = '';\r\n          if (serverError && typeof serverError === 'object') {\r\n            for (const key in serverError) {\r\n              if (serverError[key]) {\r\n                modelStateErrors += serverError[key] + '\\n';\r\n              }\r\n            }\r\n          }\r\n          return throwError(modelStateErrors || serverError || 'Server Error');\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n// what we're effectively doing here is adding an additional HTTP interceptor to angular's array\r\n// of HTTP interceptors and this is our own custom one.\r\n// set multi to true because we don't want this to replace our existing interceptors.\r\n// We want this to be added to our array of already existing interceptors.\r\nexport const ErrorInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\n  constructor(private http: HttpClient) {}\n\n  getUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n\n    let params = new HttpParams();\n\n    // page & itemsPerPage are optional becation by default the server returns he firs page with 10 items\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if(likesParam === 'Likers') {\n      params = params.append('likers', 'true');\n    }\n\n    if(likesParam === 'Likees') {\n      params = params.append('likees', 'true');\n    }\n\n    // Add observe:'response' because by default only the body is observed and we need the headers too\n    return this.http\n      .get<User[]>(this.baseUrl + 'users', { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(\n              response.headers.get('Pagination')\n            );\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: number, user: User): Observable<User> {\n    return this.http.put<User>(this.baseUrl + 'users/' + id, user);\n  }\n\n  // http.post requires a body so we'll send an empty object\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(\n      this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain',\n      {}\n    );\n  }\n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\n  }\n\n  sendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {});\n  }\n\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?): Observable<PaginatedResult<Message[]>> {\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n\n    let params = new HttpParams();\n\n    params = params.append('MessageContainer', messageContainer);\n\n    // page & itemsPerPage are optional becation by default the server returns he firs page with 10 items\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    // Add observe:'response' because by default only the body is observed and we need the headers too\n    return this.http\n      .get<Message[]>(this.baseUrl + 'users/' + id + '/messages', { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(\n              response.headers.get('Pagination') // Json string to object\n            );\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId);\n  }\n\n  sendMessage(id: number, message: Message) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\n  }\n\n  deleteMessage(id: number, userId: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\n  }\n\n  markAsRead(userId: number, messageId: number) {\n    this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read', {})\n      .subscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  BsDropdownModule,\r\n  TabsModule,\r\n  BsDatepickerModule,\r\n  PaginationModule,\r\n  ButtonsModule\r\n} from 'ngx-bootstrap';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BsDropdownModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot()\r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    TabsModule,\r\n    BsDatepickerModule,\r\n    PaginationModule,\r\n    ButtonsModule\r\n  ]\r\n})\r\nexport class AppNgxBootstrapModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-nav></app-nav>\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'SocialApp-SPA';\n  jwtHelper = new JwtHelperService();\n\n  constructor(public authService: AuthService) {}\n\n  // when our application first loads us we'll pluck the token out from the local storage and set the token inside our auth service.\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user;\n      // this is going to update the current photo in our service with the current user photos that we're storing inside our local storage.\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppNgxBootstrapModule } from './app-ngx-bootstrap.module';\nimport { RouterModule } from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\n// Resolvers\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\n\nimport {TimeAgoPipe} from 'time-ago-pipe';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { AlertifyService } from './_services/alertify.service';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { UserService } from './_services/user.service';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\n\nexport function tokenGetter() {\n   return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      TimeAgoPipe,\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      MemberListComponent,\n      ListsComponent,\n      MessagesComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      MemberMessagesComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      AppNgxBootstrapModule,\n      NgxGalleryModule,\n      FileUploadModule,\n      RouterModule.forRoot(appRoutes),\n      JwtModule.forRoot({\n         config:{\n            tokenGetter: tokenGetter,\n            whitelistedDomains: ['localhost:5000'],         // intercept http and add token in header\n            blacklistedRoutes: ['localhost:5000/api/auth']  // don't add token (ignore)\n         }\n      })\n   ],\n   providers: [\n      AuthService,\n      ErrorInterceptorProvider,\n      AlertifyService,\n      UserService,\n      AuthGuard,\n      PreventUnsavedChangesGuard,\n      MemberDetailResolver,\n      MemberListResolver,\n      MemberEditResolver,\n      ListsResolver,\n      MessagesResolver\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">Come on in to view your matches... All you need to do is sign up!</p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n      <button class=\\\"btn btn-info btn-lg\\\">Learn more</button>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n          <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\nregisterMode = false;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n\n  registerToggle(){\n    this.registerMode = true;\n  }\n\n  cancelRegisterMode(registerMode: boolean){\n    this.registerMode = registerMode;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3RzL2xpc3RzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n    <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\\\'ve Liked'}} : {{pagination.totalItems}}</h2>\\n  </div>\\n\\n<div class=\\\"container mt-3\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likers\\\" (click)=\\\"loadUsers()\\\">Members who like me</button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likees\\\" (click)=\\\"loadUsers()\\\">Members who I like</button>\\n    </div>\\n  </div>\\n\\n  <br>\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-sm-6 col-md-4 col-lg-4 col-xl-2\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n\\n\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n\\n  </pagination>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  likesParam: string;\n  pagination: Pagination;\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n      .subscribe((res: PaginatedResult<User[]>) => {\n        this.users = res.result;\n        this.pagination = res.pagination;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n}\n","module.exports = \".card:hover img {\\r\\n    -webkit-transform: scale(1.2, 1.2);\\r\\n            transform: scale(1.2, 1.2);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out; \\r\\n    opacity: 0.7;\\r\\n}\\r\\n.card img {\\r\\n    -webkit-transform: scale(1.0, 1.0);\\r\\n            transform: scale(1.0, 1.0);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out; \\r\\n}\\r\\n.card-img-wrapper {\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\\r\\n.member-icons{\\r\\n    position: absolute;\\r\\n    bottom: -30%;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n    opacity: 0;\\r\\n}\\r\\n.card-img-wrapper:hover .member-icons {\\r\\n    bottom: 0;\\r\\n    opacity: 1;\\r\\n}\\r\\n.animate{\\r\\n    transition: all 0.3s ease-in-out;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItY2FyZC9tZW1iZXItY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0NBQTBCO1lBQTFCLDBCQUEwQjtJQUMxQiwwQkFBMEI7SUFDMUIsb0NBQW9DO0lBQ3BDLFlBQVk7QUFDaEI7QUFDQTtJQUNJLGtDQUEwQjtZQUExQiwwQkFBMEI7SUFDMUIsMEJBQTBCO0lBQzFCLG9DQUFvQztBQUN4QztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixPQUFPO0lBQ1AsUUFBUTtJQUNSLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsVUFBVTtBQUNkO0FBRUE7SUFDSSxTQUFTO0lBQ1QsVUFBVTtBQUNkO0FBRUE7SUFDSSxnQ0FBZ0M7QUFDcEMiLCJmaWxlIjoic3JjL2FwcC9tZW1iZXJzL21lbWJlci1jYXJkL21lbWJlci1jYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZDpob3ZlciBpbWcge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIsIDEuMik7XHJcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcclxuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDsgXHJcbiAgICBvcGFjaXR5OiAwLjc7XHJcbn1cclxuLmNhcmQgaW1nIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wLCAxLjApO1xyXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XHJcbiAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7IFxyXG59XHJcblxyXG4uY2FyZC1pbWctd3JhcHBlciB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4ubWVtYmVyLWljb25ze1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAtMzAlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBvcGFjaXR5OiAwO1xyXG59XHJcblxyXG4uY2FyZC1pbWctd3JhcHBlcjpob3ZlciAubWVtYmVyLWljb25zIHtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxuXHJcbi5hbmltYXRle1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\" class=\\\"card-img-top\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id ]\\\"><i class=\\\"fa fa-user\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"sendLike(user.id)\\\"><i class=\\\"fa fa-thumbs-up\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"[routerLink]=\\\"['/members/', user.id ]\\\" [queryParams]=\\\"{tab: 3}\\\" ><i class=\\\"fa fa-envelope\\\"></i></button></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\"><i class=\\\"fa fa-user\\\"></i>\\n    {{user.knownAs}}, {{user.age}}\\n    </h6>\\n    <p class=\\\"card-text text-muted text-center\\\">{{user.city}}</p>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n\n  @Input() user:User;\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n  }\n\n  sendLike(recipientId: number){\n    this.userService.sendLike(this.authService.decodedToken.nameid, recipientId).subscribe(data => {\n      this.alertify.success('You have liked: '+ this.user.knownAs);\n    }, error => {\n      this.alertify.error(error);\n    })\n  }\n\n}\n","module.exports = \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItZGV0YWlsL21lbWJlci1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixVQUFVO0lBQ1YsV0FBVztBQUNmOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbWVtYmVycy9tZW1iZXItZGV0YWlsL21lbWJlci1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWctdGh1bWJuYWlsIHtcclxuICAgIG1hcmdpbjogMjVweDtcclxuICAgIHdpZHRoOiA4NSU7XHJcbiAgICBoZWlnaHQ6IDg1JTtcclxufVxyXG5cclxuLmNhcmQtYm9keSB7XHJcbiAgICBwYWRkaW5nOiAwIDI1cHg7XHJcbn1cclxuXHJcbi5jYXJkLWZvb3RlciB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyLXRvcDogbm9uZTtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{user.knownAs}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt={{user.knownAs}}>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"div\\\">\\n            <strong>Location: </strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div class=\\\"div\\\">\\n            <strong>Age: </strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div class=\\\"div\\\">\\n            <strong>Last Active: </strong>\\n            <p>{{user.lastActive | timeAgo}}</p>\\n          </div>\\n          <div class=\\\"div\\\">\\n            <strong>Member Since: </strong>\\n            <p>{{user.created | date: 'mediumDate'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100\\\">Like</button>\\n            <button class=\\\"btn btn-success w-100\\\" (click)=\\\"selectTab(3)\\\">Message</button>\\n          </div>\\n        </div>\\n     </div> \\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\" #memberTabs>\\n          <tab heading=\\\"About {{user.knownAs}}\\\">\\n            <h4>Description</h4>\\n            <p>{{user.introduction}}</p>\\n            <h4>Looking For</h4>\\n            <p>{{user.lookingFor}}</p>\\n          </tab>\\n          <tab heading=\\\"Interrests\\\">\\n            <h4>Interrests</h4>\\n            <p>{{user.interests}}</p>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <app-member-messages [recipientId]=\\\"user.id\\\"></app-member-messages>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { User } from 'src/app/_models/user';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\r\nimport { TabsetComponent } from 'ngx-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css']\r\n})\r\nexport class MemberDetailComponent implements OnInit {\r\n  @ViewChild ('memberTabs') memberTabs: TabsetComponent;\r\n  user: User;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.user = data['user'];\r\n    });\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      const selectedTab = params['tab'];\r\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\r\n    });\r\n\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns:4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\r\n    ];\r\n    this.galleryImages=this.getImages();\r\n  }\r\n\r\n  getImages(){\r\n    const imageUrls=[];\r\n    for (let index = 0; index < this.user.photos.length; index++) {\r\n      imageUrls.push({\r\n        small: this.user.photos[index].url,\r\n        medium: this.user.photos[index].url,\r\n        big: this.user.photos[index].url,\r\n        description: this.user.photos[index].descriptioon\r\n      });\r\n    }\r\n    return imageUrls;\r\n  }\r\n\r\n  selectTab(tabId: number){\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n}\r\n","module.exports = \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItZWRpdC9tZW1iZXItZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFVBQVU7SUFDVixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9tZW1iZXJzL21lbWJlci1lZGl0L21lbWJlci1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1nLXRodW1ibmFpbCB7XHJcbiAgICBtYXJnaW46IDI1cHg7XHJcbiAgICB3aWR0aDogODUlO1xyXG4gICAgaGVpZ2h0OiA4NSU7XHJcbn1cclxuXHJcbi5jYXJkLWJvZHkge1xyXG4gICAgcGFkZGluZzogMCAyNXB4O1xyXG59XHJcblxyXG4uY2FyZC1mb290ZXIge1xyXG4gICAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlci10b3A6IG5vbmU7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n        <h1>Your Profile</h1>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info text-center\\\">\\n        <strong>Information:</strong> You have made changes. Any unsaved changes will be lost !\\n      </div>\\n    </div> \\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{photoUrl || '../../../assets/user.png'}}\\\" alt={{user.knownAs}}>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"div\\\">\\n            <strong>Location: </strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div class=\\\"div\\\">\\n            <strong>Age: </strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div class=\\\"div\\\">\\n            <strong>Last Active: </strong>\\n            <p>{{user.lastActive | timeAgo}}</p>\\n          </div>\\n          <div class=\\\"div\\\">\\n            <strong>Member Since: </strong>\\n            <p>{{user.created | date: 'mediumDate'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n            <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" class=\\\"btn btn-success btn-block w-100\\\">Save</button>\\n        </div>\\n     </div> \\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\">\\n          <tab heading=\\\"Edit Profile\\\">\\n            <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n              <h4>Description :</h4>\\n              <textarea name=\\\"introduction\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.introduction\\\"></textarea>\\n              <h4>Looking For :</h4>\\n              <textarea name=\\\"lookingFor\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\n              <h4>Interrests :</h4>\\n              <textarea name=\\\"interests\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.interests\\\"></textarea>\\n              <h4>Location Details :</h4>\\n              <div class=\\\"form-inline\\\">\\n                <label for=\\\"city\\\">City</label>\\n                <input type=\\\"text\\\" name=\\\"city\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.city\\\">\\n                <label for=\\\"country\\\">Country</label>\\n                <input type=\\\"text\\\" name=\\\"country\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.country\\\">\\n              </div>\\n            </form>\\n            \\n          </tab>\\n          <tab heading=\\\"Edit Photos\\\">\\n            <app-photo-editor [photos]=\\\"user.photos\\\" (getMemberPhotoChange)=\\\"updateMainPhoto($event)\\\"></app-photo-editor>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  user: User;\n  photoUrl: string;\n  @ViewChild('editForm') editForm: NgForm;\n  // Prevent the user from closiong the browser without saving changes\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(\n      data => {\n        this.user = data['user'];\n      },\n      error => {\n        this.alertify.error(error);\n      }\n    );\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n  updateUser() {\n    this.userService\n      .updateUser(this.authService.decodedToken.nameid, this.user)\n      .subscribe(\n        next => {\n          this.alertify.success('Profile updated');\n          this.editForm.reset(this.user);\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  // Update the user photo when the isMain flag is changed in the child (photo-editor.component)\n  updateMainPhoto(photoUrl){\n    this.user.photoUrl = photoUrl;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvbWVtYmVyLWxpc3QvbWVtYmVyLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n    <h2>Your matches - {{pagination.totalItems}} found</h2>\\n  </div>\\n  \\n  <div class=\\\"container mt-3\\\">\\n\\n      <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" novalidate>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"minAge\\\">Age From</label>\\n            <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"minAge\\\"\\n              [(ngModel)]=\\\"userParams.minAge\\\" name=\\\"minAge\\\">\\n          </div>\\n  \\n          <div class=\\\"form-group px-2\\\">\\n            <label for=\\\"maxAge\\\">Age To</label>\\n            <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"maxAge\\\"\\n               [(ngModel)]=\\\"userParams.maxAge\\\" name=\\\"maxAge\\\">\\n          </div>\\n  \\n          <div class=\\\"form-group px-2\\\">\\n            <label for=\\\"gender\\\">Show: </label>\\n            <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\"\\n              [(ngModel)]=\\\"userParams.gender\\\" name=\\\"gender\\\">\\n              <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n                {{gender.display}}\\n              </option>\\n            </select>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"resetFilters()\\\" style=\\\"margin-left:10px\\\">\\n              Reset Filter\\n          </button>\\n          \\n          <div class=\\\"col\\\">\\n            <div class=\\\"btn-group float-right\\\">\\n              <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\n                [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"lastActive\\\">Last Active</button>\\n              <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\n                [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"created\\\">Newest Members</button>\\n            </div>\\n          </div>\\n  \\n        </form>\\n        <br>\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <pagination \\n    [boundaryLinks]=\\\"true\\\" \\n    [totalItems]=\\\"pagination.totalItems\\\"\\n    [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\"\\n    previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n</pagination>  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginatedResult } from 'src/app/_models/pagination';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n  userParams: any ={};\n  pagination: Pagination;\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    // this.loadUsers();\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n\n    this.userParams.gender = (this.user.gender === 'female') ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  resetFilters(){\n    this.userParams.gender = (this.user.gender === 'female') ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n      .subscribe((res: PaginatedResult<User[]>) => {\n        this.users = res.result;\n        this.pagination = res.pagination;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n}\n","module.exports = \".card {\\r\\n    border: none;\\r\\n  }\\r\\n  \\r\\n  .chat {\\r\\n    list-style: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n  }\\r\\n  \\r\\n  .chat li {\\r\\n    margin-bottom: 10px;\\r\\n    padding-bottom: 10px;\\r\\n    border-bottom: 1px dotted #B3A9A9;\\r\\n  }\\r\\n  \\r\\n  .rounded-circle {\\r\\n    height: 50px;\\r\\n    width: 50px;\\r\\n  }\\r\\n  \\r\\n  .card-body {\\r\\n    overflow-y: scroll;\\r\\n    height: 400px;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItbWVzc2FnZXMvbWVtYmVyLW1lc3NhZ2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsU0FBUztJQUNULFVBQVU7RUFDWjs7RUFFQTtJQUNFLG1CQUFtQjtJQUNuQixvQkFBb0I7SUFDcEIsaUNBQWlDO0VBQ25DOztFQUVBO0lBQ0UsWUFBWTtJQUNaLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixhQUFhO0VBQ2YiLCJmaWxlIjoic3JjL2FwcC9tZW1iZXJzL21lbWJlci1tZXNzYWdlcy9tZW1iZXItbWVzc2FnZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICB9XHJcbiAgXHJcbiAgLmNoYXQge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC5jaGF0IGxpIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQgI0IzQTlBOTtcclxuICB9XHJcbiAgXHJcbiAgLnJvdW5kZWQtY2lyY2xlIHtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIHdpZHRoOiA1MHB4O1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1ib2R5IHtcclxuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcclxuICAgIGhlaWdodDogNDAwcHg7XHJcbiAgfVxyXG4gICJdfQ== */\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"messages?.length === 0\\\">\\n      No messages yet... say hi by using the message box below\\n    </div>\\n\\n    <ul class=\\\"chat\\\">\\n      <li *ngFor=\\\"let message of messages\\\">\\n        <!-- from them -->\\n        <div *ngIf=\\\"message.senderId == recipientId\\\">\\n          <span class=\\\"chat-img float-left\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle mr-1\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <strong class=\\\"primary-font\\\"> {{message.senderKnownAs}}</strong>\\n              <small class=\\\"text-muted float-right\\\">\\n                <span class=\\\"fa fa-clock-o\\\"> {{message.messageSent | timeAgo}}</span>\\n              </small>\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n\\n        <!-- from me -->\\n        <div *ngIf=\\\"message.senderId != recipientId\\\">\\n            <span class=\\\"chat-img float-right\\\">\\n              <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n            </span>\\n            <div class=\\\"chat-body\\\">\\n              <div class=\\\"header\\\">\\n                  <small class=\\\"text-muted\\\">\\n                      <span class=\\\"fa fa-clock-o\\\"> {{message.messageSent | timeAgo}}</span>\\n                      <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\"> (unread)</span>\\n                      <span *ngIf=\\\"message.isRead\\\" class=\\\"text-success\\\"> (Read {{message.dateRead | timeAgo}})</span>\\n                    </small>\\n                <strong class=\\\"primary-font float-right\\\">{{message.senderKnownAs}}</strong>\\n\\n              </div>\\n              <p>{{message.content}}</p>\\n            </div>\\n          </div>\\n      </li>\\n    </ul>\\n\\n  </div>\\n\\n  <div class=\\\"card-footer\\\">\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"messageForm.valid && sendMessage()\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\"\\n          [(ngModel)]=\\\"newMessage.content\\\"\\n          name=\\\"content\\\"\\n          required\\n          class=\\\"form-control input-sm\\\"\\n          placeholder=\\\"send a private message\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <button [disabled]=\\\"!messageForm.valid\\\" class=\\\"btn btn-primary\\\">Send</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n\\n\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { Message } from 'src/app/_models/message';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n  constructor(private userService: UserService, private authService: AuthService,\n      private alertify: AlertifyService) { }\n\n      ngOnInit() {\n        this.loadMessages();\n      }\n\n  loadMessages(){\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService.getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n    .pipe(\n      tap(messages => {\n        for (let i = 0; i < messages.length; i++) {\n          if(messages[i].isRead === false && messages[i].recipientId === currentUserId) {\n            this.userService.markAsRead(currentUserId, messages[i].id);\n          }\n        }\n      })\n    )\n    .subscribe(\n      messages => {\n      this.messages = messages;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  sendMessage(){\n    this.newMessage.recipientId = this.recipientId;\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage).subscribe((message: Message) => {\n      this.messages.unshift(message); // add to start of the array\n      this.newMessage.content = '';\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","module.exports = \"img.img-thumbnail {\\r\\n    height: 100px;\\r\\n    min-width: 100px !important;\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.nv-file-over {\\r\\n    border: dotted 3px red;\\r\\n}\\r\\n\\r\\ninput[type=file] {\\r\\n    color: transparent;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9waG90by1lZGl0b3IvcGhvdG8tZWRpdG9yLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsMkJBQTJCO0lBQzNCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvcGhvdG8tZWRpdG9yL3Bob3RvLWVkaXRvci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1nLmltZy10aHVtYm5haWwge1xyXG4gICAgaGVpZ2h0OiAxMDBweDtcclxuICAgIG1pbi13aWR0aDogMTAwcHggIWltcG9ydGFudDtcclxuICAgIG1hcmdpbi1ib3R0b206IDJweDtcclxufVxyXG5cclxuLm52LWZpbGUtb3ZlciB7XHJcbiAgICBib3JkZXI6IGRvdHRlZCAzcHggcmVkO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPWZpbGVdIHtcclxuICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{photo.url}}\\\" class=\\\"img-thumbnail p-1\\\" alt=\\\"\\\">\\n    <div class=\\\"text-center\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm mr-1\\\" \\n        [ngClass]=\\\"photo.isMain ? 'btn-success active' : 'btn-secondary'\\\"\\n        (click)=\\\"setMainPhoto(photo)\\\" \\n        [disabled]=\\\"photo.isMain\\\">Main</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" \\n        [disabled]=\\\"photo.isMain\\\"\\n        (click)=\\\"deletePhoto(photo.id)\\\"><i class=\\\"fa fa-trash-o\\\"></i></button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\">\\n \\n  <div class=\\\"col-md-3\\\">\\n\\n      <h3>Add Photos</h3>\\n\\n      <div ng2FileDrop\\n           [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n           (fileOver)=\\\"fileOverBase($event)\\\"\\n           [uploader]=\\\"uploader\\\"\\n           class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n           <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n          Drop Photos Here\\n      </div>\\n\\n      Multiple\\n      <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\n\\n      Single\\n      <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n  </div>\\n\\n  <!-- will only display if something is inside the Queue -->\\n  <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n\\n      <h3>Upload queue</h3>\\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n      <table class=\\\"table\\\">\\n          <thead>\\n          <tr>\\n              <th width=\\\"50%\\\">Name</th>\\n              <th>Size</th>\\n          </tr>\\n          </thead>\\n          <tbody>\\n          <tr *ngFor=\\\"let item of uploader.queue\\\">\\n              <td><strong>{{ item?.file?.name }}</strong></td>\\n              <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n          </tr>\\n          </tbody>\\n      </table>\\n\\n      <div>\\n          <div>\\n              Queue progress:\\n              <div class=\\\"progress mb-4\\\">\\n                  <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n              </div>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-success btn-s mr-1\\\"\\n                  (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n              <span class=\\\"fa fa-upload\\\"></span> Upload\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s mr-1\\\"\\n                  (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n              <span class=\\\"fa fa-ban\\\"></span> Cancel\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                  (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n              <span class=\\\"fa fa-trash\\\"></span> Remove\\n          </button>\\n      </div>\\n\\n  </div>\\n\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from 'src/app/_models/Photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>(); // photo URL\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baeUrl = environment.apiUrl;\n  currentMainPhoto: Photo;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      // api/users/{userId}/photos\n      url: this.baeUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024 // 10MB\n    });\n\n    // Issue with ng2-uploader we need to specify that the file is uploaded without credentials(cookies) to avoid a CORS error\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false;};\n\n    // Show the new photo after upload by pushing the response photo to the array of photos\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if(response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          descriptioon: res.descriptioon,\n          isMain: res.isMain\n        };\n        this.photos.push(photo);\n        if(photo.isMain){\n          this.authService.changeMemberPhoto(photo.url);\n        // Update localStorage\n        this.authService.currentUser.photoUrl = photo.url;\n        localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n        }\n      }\n    };\n  }\n\n  setMainPhoto(photo: Photo){\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id)\n    .subscribe(\n      ()=> {\n        // Reset the current main photo to false\n        this.currentMainPhoto = this.photos.filter(p => p.isMain === true)[0];\n        this.currentMainPhoto.isMain = false;\n        // Set the is Main to true\n        photo.isMain = true;\n        // this.getMemberPhotoChange.emit(photo.url);\n        this.authService.changeMemberPhoto(photo.url);\n        // Update localStorage\n        this.authService.currentUser.photoUrl = photo.url;\n        localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  deletePhoto(id: number){\n    this.alertify.confirm('Are yoiu sure you want to delete this photo?', () => {\n      this.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(()=> {\n        this.photos.splice(this.photos.findIndex(p => p.id === id, 1));\n        this.alertify.success('Photo has been deleted');\n      }, error => {\n        this.alertify.error(error);\n      });\n    });\n  }\n}\n","module.exports = \"table {\\r\\n    margin-top: 15px;\\r\\n  }\\r\\n  \\r\\n  .img-circle {\\r\\n    max-height: 50px;\\r\\n  }\\r\\n  \\r\\n  td {\\r\\n    vertical-align: middle;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZXMvbWVzc2FnZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLHNCQUFzQjtFQUN4QiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gIH1cclxuICBcclxuICAuaW1nLWNpcmNsZSB7XHJcbiAgICBtYXgtaGVpZ2h0OiA1MHB4O1xyXG4gIH1cclxuICBcclxuICB0ZCB7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIH1cclxuICAiXX0= */\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope\\\"></i> Unread\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\n    <h3>No messages</h3>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\n    <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n      <tr>\\n        <th style=\\\"width: 40%\\\">Message</th>\\n        <th style=\\\"width: 20%\\\">From / To</th>\\n        <th style=\\\"width: 20%\\\">Sent / Received</th>\\n        <th style=\\\"width: 20%\\\"></th>\\n      </tr>\\n      <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"['/members',\\n        messageContainer == 'Outbox' ? message.recipientId : message.senderId]\\\"\\n          [queryParams]=\\\"{tab: 3}\\\">\\n        <td>{{message.content}}</td>\\n        <td>\\n          <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\n                <img src={{message?.senderPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n                <strong>{{message.senderKnownAs}}</strong>\\n          </div>\\n          <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\n                <img src={{message?.recipientPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n                <strong>{{message.recipientKnownAs}}</strong>\\n          </div>\\n        </td>\\n        <td>{{message.messageSent | timeAgo}}</td>\\n        <td>\\n          <!-- stopPropagation : will disable the navigation when clicking on the delete button which is in a div with a router link -->\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\" >Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <pagination [boundaryLinks]=\\\"true\\\"\\n                [totalItems]=\\\"pagination.totalItems\\\"\\n                [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n                [(ngModel)]=\\\"pagination.currentPage\\\"\\n                (pageChanged)=\\\"pageChanged($event)\\\"\\n              previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n  </pagination>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\n\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(private userService: UserService, private authService: AuthService,\n    private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n    ngOnInit() {\n      this.route.data.subscribe(data => {\n        this.messages = data['messages'].result;\n        this.pagination = data['messages'].pagination;\n      });\n    }\n\n    loadMessages(){\n      this.userService.getMessages(this.authService.decodedToken.nameid, this.pagination.currentPage,\n        this.pagination.itemsPerPage, this.messageContainer).subscribe((res: PaginatedResult<Message[]>) => {\n          this.messages = res.result;\n          this.pagination = res.pagination;\n        }, error => {\n          this.alertify.error(error);\n        });\n    }\n\n    deleteMessage(id: number) {\n      this.alertify.confirm('Are you sure you want to delete this message?', () => {\n        this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(() => {\n          this.messages.splice(this.messages.findIndex(m => m.id === id), 1); // dlete from view\n          this.alertify.success('Message has been deleted');\n        }, error => {\n          this.alertify.error('Failed to delete the message');\n        });\n      });\n    }\n\n    pageChanged(event: any): void {\n      this.pagination.currentPage = event.page;\n      this.loadMessages();\n    }\n\n}\n","module.exports = \".dropdown-toggle, .dropdown-item {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\nimg {\\r\\n  max-height: 50px;\\r\\n  border: 2px solid white;\\r\\n  display: inline;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQix1QkFBdUI7RUFDdkIsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kcm9wZG93bi10b2dnbGUsIC5kcm9wZG93bi1pdGVtIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgbWF4LWhlaWdodDogNTBweDtcclxuICBib3JkZXI6IDJweCBzb2xpZCB3aGl0ZTtcclxuICBkaXNwbGF5OiBpbmxpbmU7XHJcbn0iXX0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <div class=\\\"container\\\">\\n\\n      <a class=\\\"navbar-brand\\\"  [routerLink]=\\\"['/home']\\\">Social App</a>\\n\\n      <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\">Matches</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\">Lists</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\">Messages</a>\\n        </li>\\n      </ul>\\n    \\n      <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n        <span class=\\\"mr-1\\\">\\n          <img src=\\\"{{photoUrl || '../../assets/user.png'}}\\\" alt=\\\"{{authService.currentUser.knownAs}}\\\">\\n        </span>\\n        <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\n          Welcome {{authService.decodedToken?.unique_name}}\\n        </a>\\n      \\n        <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/members/edit']\\\"><i class=\\\"fa fa-user\\\"></i> Edit Profile</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-sign-out\\\"></i> Logout</a>\\n        </div>\\n      </div>\\n    \\n      <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" \\n          placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" \\n          placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\n        <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n      </form>\\n    \\n  </div>\\n  \\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  photoUrl: string;\n\n  constructor(\n    public authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(\n      next => {\n        this.alertify.success('Loggen in succeessfully');\n      },\n      error => {\n        this.alertify.error(error);\n      },\n      () => {\n        this.router.navigate(['/members']);\n      }\n    );\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n    this.alertify.message('logged out');\n    this.router.navigate(['/home']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\n      <label class=\\\"radio-inline\\\">\\n        <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\n      </label>\\n      <label class=\\\"radio-inline ml-3\\\">\\n        <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\n      </label>\\n    </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\" \\n      [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors \\n        && registerForm.get('username').touched}\\\"\\n      class=\\\"form-control\\\" \\n      formControlName=\\\"username\\\" \\n      placeholder=\\\"Username\\\">\\n    <div class=\\\"invalid-feedback\\\">Please choose a username</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n      <input [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\" class=\\\"form-control\\\"\\n        placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\">\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">Known as is required</div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <input [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\">\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">Date of Birth is required</div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <input [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">City is required</div>\\n        </div>\\n      \\n        <div class=\\\"form-group\\\">\\n          <input [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">Country is required</div>\\n        </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" \\n      [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors \\n        && registerForm.get('password').touched}\\\"\\n      class=\\\"form-control\\\" \\n      formControlName=\\\"password\\\" \\n      placeholder=\\\"Password\\\">\\n      <div class=\\\"invalid-feedback\\\" \\n        *ngIf=\\\"registerForm.get('password').hasError('required') \\n          && registerForm.get('password').touched\\\">\\n          Password is required\\n      </div>\\n      <div class=\\\"invalid-feedback\\\" \\n      *ngIf=\\\"registerForm.get('password').hasError('minlength') \\n        && registerForm.get('password').touched\\\">\\n        Password must be at least 4 characters\\n    </div>\\n    <div class=\\\"invalid-feedback\\\" \\n    *ngIf=\\\"registerForm.get('password').hasError('maxlength') \\n      && registerForm.get('password').touched\\\">\\n      Password cannot exceed 8 characters\\n  </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n      <input \\n        [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors \\n          && registerForm.get('confirmPassword').touched\\n          || registerForm.get('confirmPassword').touched\\n          && registerForm.hasError('mismatch')}\\\"\\n        type=\\\"password\\\" \\n        class=\\\"form-control\\\" \\n        formControlName=\\\"confirmPassword\\\" \\n        placeholder=\\\"Confirm Password\\\">\\n        <div class=\\\"invalid-feedback\\\" \\n        *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') \\n          && registerForm.get('confirmPassword').touched\\\">\\n          Confirm Password is required\\n      </div>\\n      <div class=\\\"invalid-feedback\\\" \\n      *ngIf=\\\"registerForm.hasError('mismatch') \\n        && registerForm.get('confirmPassword').touched\\\">\\n        Passwords must match\\n    </div>\\n    </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success mr-2\\\" [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n  \\n</form>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { fbind } from 'q';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  user: User;\n  registerForm: FormGroup;\n  // when we use a partial class we effectively make all of the properties in the tie optional.\n  bsConfig: Partial<BsDatepickerConfig>;\n\n    constructor(private authService: AuthService, private alertify: AlertifyService, private fb: FormBuilder, private router: Router) { }\n\n  ngOnInit() {\n    this.bsConfig = {\n      containerClass: 'theme-red'\n    };\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validator: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(fg: FormGroup) {\n    return fg.get('password').value === fg.get('confirmPassword').value ? null : {'mismatch': true};\n  }\n\n  register() {\n    // And this effectively clone's the values in here into the empty objects. And then assigns the empty object to this user.\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n      this.authService.register(this.user).subscribe(() => {\n        this.alertify.success('Registration successful');\n      }, error => {\n        this.alertify.error(error);\n      }, () => {\n        this.authService.login(this.user).subscribe(() => {\n          this.router.navigate(['/members']);\n        });\n      });\n    }\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n    console.log('cancelled');\n  }\n\n}\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: '', // dummy parent path\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'members', component: MemberListComponent, resolve: { users: MemberListResolver } },\r\n      // we'll get the id from decoding the token\r\n      { path: 'members/edit', component: MemberEditComponent,\r\n      resolve: {user: MemberEditResolver }, canDeactivate:[PreventUnsavedChangesGuard]},\r\n      {\r\n        path: 'members/:id',\r\n        component: MemberDetailComponent,\r\n        resolve: { user: MemberDetailResolver }\r\n      }, // user : how we're gonna access the data from our route\r\n      { path: 'messages', component: MessagesComponent, resolve: {messages: MessagesResolver} },\r\n      { path: 'lists', component: ListsComponent, resolve: {users: ListsResolver} }\r\n    ]\r\n  },\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}